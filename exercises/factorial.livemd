# Factorial

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Factorial

The factorial of a $n$ is the sum of the sequence of numbers leading up to $n$.

```mermaid
flowchart LR
n --*--> n1[n - 1] --*--> n2[n - 2] --*--> n3[n - 3] --*--> 2 --*--> 1
```

Meaning the factorial of `5` is `5 * 4 * 3 * 2 * 1` which equals `120`.

So $factorial(n) = n * factorial(n - 1)$

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>Example Solution</summary>

```elixir
defmodule Factorial do
  def of(1), do: 1
  def of(n) do
    n * of(n - 1)
  end
end
```

</details>

Our factorial function only needs to handle inputs above `1`.
Implement the `Factorial` module as documented below.

```elixir
defmodule Factorial do
  @doc """
  Find the factorial of an integer.

  ## Examples

    iex> Factorial.of(1)
    1

    iex> Factorial.of(2)
    2

    iex> Factorial.of(3)
    6

    iex> Factorial.of(4)
    24
    
    iex> Factorial.of(5)
    120

    iex> Factorial.of(10)
    3628800
  """
  def of(n) when n == 1 do
    IO.inspect("calculating 1*")
    1
  end

  def of(n) when n == 2 do
    IO.inspect("calculating 2**")
    2
  end

  def of(n) do
    IO.inspect("calculating #{n}")
    n * of(n - 1)
  end
end

Factorial.of(5)
```

## Commit Your Progress

Run the following in your command line from the beta_curriculum folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish factorial exercise"
```

## Up Next

| Previous                                           | Next                                                     |
| -------------------------------------------------- | -------------------------------------------------------: |
| [Lucas Numbers](../exercises/lucas_numbers.livemd) | [Pascals Triangle](../exercises/pascals_triangle.livemd) |
